!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).ScrollStory=t()}(this,(function(){"use strict";return function(e){if(this.config=e,this.activeSceneIndex=-1,this.progressValue=-1,this.frameCount=0,this.prevScrollPos=0,this.container=e.container,!this.container)throw Error("container not found.");if(window.getComputedStyle(this.container),this.container.style.overflowY="scroll",this.container.style.position="relative",this.scenes=e.scenes,!this.scenes)throw Error("'scenes' not found.");this.isScrollingDown=function(){const e=this.scrollTop||this.container.scrollTop,t=e>this.prevScrollPos;return this.prevScrollPos=e,t},this.render=function(){const e=this.container.scrollTop;if(e===this.scrollTop)return void window.requestAnimationFrame(this.tick);this.scrollTop=e;const t=this.container.getBoundingClientRect(),i=(t.top+t.bottom)/2,s=this.activeSceneIndex,n=this.progressValue;this.activeSceneIndex=-1,this.progressValue=-1;for(const[e,t]of this.scenes.entries()){const s=t.getBoundingClientRect(),n=!(s.top>i||s.bottom<i),o=(i-s.top)/s.height;if(n){this.activeSceneIndex=e,this.progressValue=o;break}}const o=s!==this.activeSceneIndex,r=n!==this.progressValue,c=this.isScrollingDown()?"down":"up";o&&(this.config.exit&&this.scenes[s]&&this.config.exit({scene:s,element:this.scenes[s],progress:this.progressValue,direction:c}),this.config.enter&&this.scenes[this.activeSceneIndex]&&this.config.enter({scene:this.activeSceneIndex,element:this.scenes[this.activeSceneIndex],progress:this.progressValue,direction:c})),(r||o)&&(this.frameCount+=1,this.config.progress&&this.scenes[this.activeSceneIndex]&&this.config.progress({scene:this.activeSceneIndex,element:this.scenes[this.activeSceneIndex],progress:this.progressValue,direction:c})),window.requestAnimationFrame(this.tick)},this.tick=this.render.bind(this),window.requestAnimationFrame(this.tick),this.getActiveSceneIndex=function(){return this.activeSceneIndex},this.getProgressValue=function(){return this.progressValue},this.refresh=function(){this.scrollTop=void 0,this.activeSceneIndex=-2}}}));
